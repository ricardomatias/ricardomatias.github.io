{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nexport default function useMeasure() {\n  _s();\n\n  var ref = useRef();\n\n  var _useState = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0\n  }),\n      bounds = _useState[0],\n      set = _useState[1];\n\n  var _useState2 = useState(function () {\n    return new ResizeObserver(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          entry = _ref2[0];\n\n      return set(entry.contentRect);\n    });\n  }),\n      ro = _useState2[0];\n\n  console.log('useMeasure');\n  useEffect(function () {\n    ro.observe(ref.current);\n    return function () {\n      ro.unobserve(ref.current);\n      ro.disconnect();\n    };\n  }, []);\n  return [{\n    ref: ref\n  }, bounds];\n}\n\n_s(useMeasure, \"OIvjID4Dm2J3QjzFZqgVRgQ68iQ=\");","map":{"version":3,"sources":["/Users/feral/Projects/ricardomatias.github.io/hooks/useMeasure.js"],"names":["useRef","useState","useEffect","ResizeObserver","useMeasure","ref","left","top","width","height","bounds","set","entry","contentRect","ro","console","log","observe","current","unobserve","disconnect"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACpC,MAAMC,GAAG,GAAGL,MAAM,EAAlB;;AADoC,kBAEZC,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,GAAG,EAAE,CAAhB;AAAmBC,IAAAA,KAAK,EAAE,CAA1B;AAA6BC,IAAAA,MAAM,EAAE;AAArC,GAAD,CAFI;AAAA,MAE5BC,MAF4B;AAAA,MAEpBC,GAFoB;;AAAA,mBAGrBV,QAAQ,CAAC;AAAA,WAAM,IAAIE,cAAJ,CAAmB;AAAA;AAAA,UAAGS,KAAH;;AAAA,aAAeD,GAAG,CAACC,KAAK,CAACC,WAAP,CAAlB;AAAA,KAAnB,CAAN;AAAA,GAAD,CAHa;AAAA,MAG5BC,EAH4B;;AAIpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAd,EAAAA,SAAS,CAAC,YAAM;AACfY,IAAAA,EAAE,CAACG,OAAH,CAAWZ,GAAG,CAACa,OAAf;AACA,WAAO,YAAM;AACZJ,MAAAA,EAAE,CAACK,SAAH,CAAad,GAAG,CAACa,OAAjB;AACAJ,MAAAA,EAAE,CAACM,UAAH;AACA,KAHD;AAIA,GANQ,EAMN,EANM,CAAT;AAQA,SAAO,CAAE;AAAEf,IAAAA,GAAG,EAAHA;AAAF,GAAF,EAAWK,MAAX,CAAP;AACA;;GAduBN,U","sourcesContent":["import { useRef, useState, useEffect } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport default function useMeasure() {\n\tconst ref = useRef();\n\tconst [ bounds, set ] = useState({ left: 0, top: 0, width: 0, height: 0 });\n\tconst [ ro ] = useState(() => new ResizeObserver(([ entry ]) => set(entry.contentRect)));\n\tconsole.log('useMeasure');\n\tuseEffect(() => {\n\t\tro.observe(ref.current);\n\t\treturn () => {\n\t\t\tro.unobserve(ref.current);\n\t\t\tro.disconnect();\n\t\t};\n\t}, []);\n\n\treturn [ { ref }, bounds ];\n}\n"]},"metadata":{},"sourceType":"module"}