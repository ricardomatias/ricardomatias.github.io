{"ast":null,"code":"var _jsxFileName = \"/Users/feral/Projects/ricardomatias.github.io/components/scenes/Backdrop.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as THREE from 'three';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef(); // Set up state for the hovered and active state\n\n  const {\n    0: hovered,\n    1: setHover\n  } = useState(false);\n  const {\n    0: active,\n    1: setActive\n  } = useState(false); // Rotate mesh every frame, this is outside of React without overhead\n\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  return __jsx(\"mesh\", _extends({}, props, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }), __jsx(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), __jsx(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? 'hotpink' : 'orange',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction Backdrop({\n  onMouseMove,\n  children\n}) {\n  return __jsx(\"div\", {\n    className: \"h-full w-full\",\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      zIndex: 1\n    },\n    onMouseMove: onMouseMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, __jsx(Canvas, {\n    gl: {\n      alpha: true,\n      antialias: false,\n      logarithmicDepthBuffer: true\n    },\n    camera: {\n      fov: 45,\n      position: [0, 0, 120]\n    },\n    onCreated: ({\n      gl\n    }) => {\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding; // gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      // gl.shadowMap.enabled = true;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, children));\n}\n\nBackdrop.propTypes = {\n  onMouseMove: PropTypes.func,\n  children: PropTypes.element\n};\nexport default Backdrop;","map":{"version":3,"sources":["/Users/feral/Projects/ricardomatias.github.io/components/scenes/Backdrop.js"],"names":["THREE","PropTypes","React","useRef","useState","Canvas","useFrame","Box","props","mesh","hovered","setHover","active","setActive","current","rotation","x","y","e","Backdrop","onMouseMove","children","position","bottom","right","zIndex","alpha","antialias","logarithmicDepthBuffer","fov","gl","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","propTypes","func","element"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\n\nfunction Box(props) {\n\t// This reference will give us direct access to the mesh\n\tconst mesh = useRef();\n\n\t// Set up state for the hovered and active state\n\tconst [ hovered, setHover ] = useState(false);\n\tconst [ active, setActive ] = useState(false);\n\n\t// Rotate mesh every frame, this is outside of React without overhead\n\tuseFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n\treturn (\n\t\t<mesh\n\t\t\t{...props}\n\t\t\tref={mesh}\n\t\t\tscale={active ? [ 1.5, 1.5, 1.5 ] : [ 1, 1, 1 ]}\n\t\t\tonClick={e => setActive(!active)}\n\t\t\tonPointerOver={e => setHover(true)}\n\t\t\tonPointerOut={e => setHover(false)}>\n\t\t\t<boxBufferGeometry attach=\"geometry\" args={[ 1, 1, 1 ]} />\n\t\t\t<meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'} />\n\t\t</mesh>\n\t);\n}\n\nfunction Backdrop({ onMouseMove, children }) {\n\treturn (\n\t\t<div className=\"h-full w-full\" style={{ position: 'absolute', bottom: 0, right: 0, zIndex: 1 }} onMouseMove={onMouseMove}>\n\t\t\t<Canvas\n\t\t\t\tgl={{ alpha: true, antialias: false, logarithmicDepthBuffer: true }}\n\t\t\t\tcamera={{ fov: 45, position: [ 0, 0, 120 ] }}\n\t\t\t\tonCreated={({ gl }) => {\n\t\t\t\t\tgl.toneMapping = THREE.ACESFilmicToneMapping;\n\t\t\t\t\tgl.outputEncoding = THREE.sRGBEncoding;\n\t\t\t\t\t// gl.shadowMap.type = THREE.PCFSoftShadowMap;\n\t\t\t\t\t// gl.shadowMap.enabled = true;\n\t\t\t\t}}>\n\t\t\t\t{ children }\n\t\t\t</Canvas>\n\t\t</div>\n\t);\n}\n\nBackdrop.propTypes = {\n\tonMouseMove: PropTypes.func,\n\tchildren: PropTypes.element,\n};\n\nexport default Backdrop;\n"]},"metadata":{},"sourceType":"module"}