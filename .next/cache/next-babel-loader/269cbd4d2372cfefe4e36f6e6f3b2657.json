{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport default function useMedia(queries, values, defaultValue) {\n  _s();\n\n  var match = function match() {\n    return values[queries.findIndex(function (q) {\n      return matchMedia(q).matches;\n    })] || defaultValue;\n  };\n\n  var _useState = useState(match),\n      value = _useState[0],\n      set = _useState[1];\n\n  useEffect(function () {\n    var handler = function handler() {\n      return set(match);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      return window.removeEventListener('resize', handler, true);\n    };\n  }, []);\n  return value;\n}\n\n_s(useMedia, \"eihZLMd9uljUUWMRuedXQGemBZ4=\");","map":{"version":3,"sources":["/Users/feral/Projects/ricardomatias.github.io/hooks/useMedia.js"],"names":["useEffect","useState","useMedia","queries","values","defaultValue","match","findIndex","q","matchMedia","matches","value","set","handler","window","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,YAAnC,EAAiD;AAAA;;AAC/D,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WAAMF,MAAM,CAACD,OAAO,CAACI,SAAR,CAAkB,UAAAC,CAAC;AAAA,aAAIC,UAAU,CAACD,CAAD,CAAV,CAAcE,OAAlB;AAAA,KAAnB,CAAD,CAAN,IAAyDL,YAA/D;AAAA,GAAd;;AAD+D,kBAExCJ,QAAQ,CAACK,KAAD,CAFgC;AAAA,MAEvDK,KAFuD;AAAA,MAEhDC,GAFgD;;AAI/DZ,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMa,OAAO,GAAG,SAAVA,OAAU;AAAA,aAAMD,GAAG,CAACN,KAAD,CAAT;AAAA,KAAhB;;AACAQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,OAAlC;AACA,WAAO;AAAA,aAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,OAArC,EAA8C,IAA9C,CAAN;AAAA,KAAP;AACA,GAJQ,EAIN,EAJM,CAAT;AAMA,SAAOF,KAAP;AACA;;GAXuBT,Q","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useMedia(queries, values, defaultValue) {\n\tconst match = () => values[queries.findIndex(q => matchMedia(q).matches)] || defaultValue;\n\tconst [ value, set ] = useState(match);\n\n\tuseEffect(() => {\n\t\tconst handler = () => set(match);\n\t\twindow.addEventListener('resize', handler);\n\t\treturn () => window.removeEventListener('resize', handler, true);\n\t}, []);\n\n\treturn value;\n}\n"]},"metadata":{},"sourceType":"module"}