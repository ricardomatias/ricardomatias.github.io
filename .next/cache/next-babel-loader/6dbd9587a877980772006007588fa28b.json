{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport * as THREE from 'three';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  var mesh = useRef(); // Set up state for the hovered and active state\n\n  var _useState = useState(false),\n      hovered = _useState[0],\n      setHover = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1]; // Rotate mesh every frame, this is outside of React without overhead\n\n\n  useFrame(function () {\n    return mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n  });\n  return __jsx(\"mesh\", _extends({}, props, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: function onClick(e) {\n      return setActive(!active);\n    },\n    onPointerOver: function onPointerOver(e) {\n      return setHover(true);\n    },\n    onPointerOut: function onPointerOut(e) {\n      return setHover(false);\n    }\n  }), __jsx(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1]\n  }), __jsx(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? 'hotpink' : 'orange'\n  }));\n}\n\nfunction Backdrop(_ref) {\n  var onMouseMove = _ref.onMouseMove,\n      children = _ref.children;\n  return __jsx(\"div\", {\n    className: \"h-full w-full\",\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      zIndex: 1\n    },\n    onMouseMove: onMouseMove\n  }, __jsx(Canvas, {\n    gl: {\n      alpha: true,\n      antialias: false,\n      logarithmicDepthBuffer: true\n    },\n    camera: {\n      fov: 45,\n      position: [0, 0, 120]\n    },\n    onCreated: function onCreated(_ref2) {\n      var gl = _ref2.gl;\n      gl.toneMapping = THREE.ACESFilmicToneMapping;\n      gl.outputEncoding = THREE.sRGBEncoding; // gl.shadowMap.type = THREE.PCFSoftShadowMap;\n      // gl.shadowMap.enabled = true;\n    }\n  }, children));\n}\n\nexport default Backdrop;","map":null,"metadata":{},"sourceType":"module"}