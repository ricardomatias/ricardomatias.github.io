{"ast":null,"code":"var _jsxFileName = \"/Users/feral/Projects/ricardomatias.github.io/pages/sketches/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport { getSketchById, getSketchesIds, pickRandomSketch, getSketches } from '../../lib/sketches';\nimport Sketch from '../../components/sketch';\nexport async function getStaticProps({\n  params\n}) {\n  const sketches = getSketches();\n  const sketch = getSketchById(sketches, params.id);\n  const randomSketch = pickRandomSketch(sketches, params.id); // const content = await markdownToHtml(post.content || ''\n\n  return {\n    props: {\n      sketch,\n      randomSketch\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const sketches = getSketchesIds();\n  return {\n    paths: sketches.map(sketch => {\n      return {\n        params: {\n          id: sketch\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport default ((props = {}) => {\n  var _props$sketch;\n\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  if (!router.isFallback && !((_props$sketch = props.sketch) === null || _props$sketch === void 0 ? void 0 : _props$sketch.id)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(Sketch, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/feral/Projects/ricardomatias.github.io/pages/sketches/[id].js"],"names":["useRouter","ErrorPage","getSketchById","getSketchesIds","pickRandomSketch","getSketches","Sketch","getStaticProps","params","sketches","sketch","id","randomSketch","props","getStaticPaths","paths","map","fallback","router","query","isFallback"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,gBAAxC,EAA0DC,WAA1D,QAA6E,oBAA7E;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,MAAM,GAAGR,aAAa,CAACO,QAAD,EAAWD,MAAM,CAACG,EAAlB,CAA5B;AACA,QAAMC,YAAY,GAAGR,gBAAgB,CAACK,QAAD,EAAWD,MAAM,CAACG,EAAlB,CAArC,CAH6C,CAI7C;;AAEA,SAAO;AACHE,IAAAA,KAAK,EAAE;AACHH,MAAAA,MADG;AAEHE,MAAAA;AAFG;AADJ,GAAP;AAMH;AAED,OAAO,eAAeE,cAAf,GAAgC;AACnC,QAAML,QAAQ,GAAGN,cAAc,EAA/B;AAEA,SAAO;AACHY,IAAAA,KAAK,EAAEN,QAAQ,CAACO,GAAT,CAAcN,MAAD,IAAY;AAC5B,aAAO;AACHF,QAAAA,MAAM,EAAE;AACJG,UAAAA,EAAE,EAAED;AADA;AADL,OAAP;AAKH,KANM,CADJ;AAQHO,IAAAA,QAAQ,EAAE;AARP,GAAP;AAUH;AAED,gBAAe,CAACJ,KAAK,GAAG,EAAT,KAAgB;AAAA;;AAC3B,QAAMK,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASO,MAAM,CAACC,KAAtB;;AAEA,MAAI,CAACD,MAAM,CAACE,UAAR,IAAsB,mBAACP,KAAK,CAACH,MAAP,kDAAC,cAAcC,EAAf,CAA1B,EAA6C;AACzC,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SAAO,MAAC,MAAD,eAAYE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CATD","sourcesContent":["import { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport { getSketchById, getSketchesIds, pickRandomSketch, getSketches } from '../../lib/sketches';\nimport Sketch from '../../components/sketch';\n\nexport async function getStaticProps({ params }) {\n    const sketches = getSketches();\n    const sketch = getSketchById(sketches, params.id);\n    const randomSketch = pickRandomSketch(sketches, params.id);\n    // const content = await markdownToHtml(post.content || ''\n\n    return {\n        props: {\n            sketch,\n            randomSketch\n        },\n    }\n}\n\nexport async function getStaticPaths() {\n    const sketches = getSketchesIds();\n\n    return {\n        paths: sketches.map((sketch) => {\n            return {\n                params: {\n                    id: sketch,\n                },\n            }\n        }),\n        fallback: false,\n    }\n}\n\nexport default (props = {}) => {\n    const router = useRouter()\n    const { id } = router.query\n\n    if (!router.isFallback && !props.sketch?.id) {\n        return <ErrorPage statusCode={404} />\n    }\n\n    return <Sketch {...props} />\n}\n"]},"metadata":{},"sourceType":"module"}